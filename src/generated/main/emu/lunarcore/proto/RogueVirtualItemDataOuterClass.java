// Code generated by protocol buffer compiler. Do not edit!
package emu.lunarcore.proto;

import java.io.IOException;
import us.hebi.quickbuf.FieldName;
import us.hebi.quickbuf.InvalidProtocolBufferException;
import us.hebi.quickbuf.JsonSink;
import us.hebi.quickbuf.JsonSource;
import us.hebi.quickbuf.MessageFactory;
import us.hebi.quickbuf.ProtoMessage;
import us.hebi.quickbuf.ProtoSink;
import us.hebi.quickbuf.ProtoSource;

public final class RogueVirtualItemDataOuterClass {
  /**
   * Protobuf type {@code RogueVirtualItemData}
   */
  public static final class RogueVirtualItemData extends ProtoMessage<RogueVirtualItemData> implements Cloneable {
    private static final long serialVersionUID = 0L;

    /**
     * <code>optional uint32 num = 5;</code>
     */
    private int num;

    /**
     * <code>optional uint32 MDBPDPDDHBC = 6;</code>
     */
    private int mDBPDPDDHBC;

    private RogueVirtualItemData() {
    }

    /**
     * @return a new empty instance of {@code RogueVirtualItemData}
     */
    public static RogueVirtualItemData newInstance() {
      return new RogueVirtualItemData();
    }

    /**
     * <code>optional uint32 num = 5;</code>
     * @return whether the num field is set
     */
    public boolean hasNum() {
      return (bitField0_ & 0x00000001) != 0;
    }

    /**
     * <code>optional uint32 num = 5;</code>
     * @return this
     */
    public RogueVirtualItemData clearNum() {
      bitField0_ &= ~0x00000001;
      num = 0;
      return this;
    }

    /**
     * <code>optional uint32 num = 5;</code>
     * @return the num
     */
    public int getNum() {
      return num;
    }

    /**
     * <code>optional uint32 num = 5;</code>
     * @param value the num to set
     * @return this
     */
    public RogueVirtualItemData setNum(final int value) {
      bitField0_ |= 0x00000001;
      num = value;
      return this;
    }

    /**
     * <code>optional uint32 MDBPDPDDHBC = 6;</code>
     * @return whether the mDBPDPDDHBC field is set
     */
    public boolean hasMDBPDPDDHBC() {
      return (bitField0_ & 0x00000002) != 0;
    }

    /**
     * <code>optional uint32 MDBPDPDDHBC = 6;</code>
     * @return this
     */
    public RogueVirtualItemData clearMDBPDPDDHBC() {
      bitField0_ &= ~0x00000002;
      mDBPDPDDHBC = 0;
      return this;
    }

    /**
     * <code>optional uint32 MDBPDPDDHBC = 6;</code>
     * @return the mDBPDPDDHBC
     */
    public int getMDBPDPDDHBC() {
      return mDBPDPDDHBC;
    }

    /**
     * <code>optional uint32 MDBPDPDDHBC = 6;</code>
     * @param value the mDBPDPDDHBC to set
     * @return this
     */
    public RogueVirtualItemData setMDBPDPDDHBC(final int value) {
      bitField0_ |= 0x00000002;
      mDBPDPDDHBC = value;
      return this;
    }

    @Override
    public RogueVirtualItemData copyFrom(final RogueVirtualItemData other) {
      cachedSize = other.cachedSize;
      if ((bitField0_ | other.bitField0_) != 0) {
        bitField0_ = other.bitField0_;
        num = other.num;
        mDBPDPDDHBC = other.mDBPDPDDHBC;
      }
      return this;
    }

    @Override
    public RogueVirtualItemData mergeFrom(final RogueVirtualItemData other) {
      if (other.isEmpty()) {
        return this;
      }
      cachedSize = -1;
      if (other.hasNum()) {
        setNum(other.num);
      }
      if (other.hasMDBPDPDDHBC()) {
        setMDBPDPDDHBC(other.mDBPDPDDHBC);
      }
      return this;
    }

    @Override
    public RogueVirtualItemData clear() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      num = 0;
      mDBPDPDDHBC = 0;
      return this;
    }

    @Override
    public RogueVirtualItemData clearQuick() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      return this;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (!(o instanceof RogueVirtualItemData)) {
        return false;
      }
      RogueVirtualItemData other = (RogueVirtualItemData) o;
      return bitField0_ == other.bitField0_
        && (!hasNum() || num == other.num)
        && (!hasMDBPDPDDHBC() || mDBPDPDDHBC == other.mDBPDPDDHBC);
    }

    @Override
    public void writeTo(final ProtoSink output) throws IOException {
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeRawByte((byte) 40);
        output.writeUInt32NoTag(num);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeRawByte((byte) 48);
        output.writeUInt32NoTag(mDBPDPDDHBC);
      }
    }

    @Override
    protected int computeSerializedSize() {
      int size = 0;
      if ((bitField0_ & 0x00000001) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(num);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(mDBPDPDDHBC);
      }
      return size;
    }

    @Override
    @SuppressWarnings("fallthrough")
    public RogueVirtualItemData mergeFrom(final ProtoSource input) throws IOException {
      // Enabled Fall-Through Optimization (QuickBuffers)
      int tag = input.readTag();
      while (true) {
        switch (tag) {
          case 40: {
            // num
            num = input.readUInt32();
            bitField0_ |= 0x00000001;
            tag = input.readTag();
            if (tag != 48) {
              break;
            }
          }
          case 48: {
            // mDBPDPDDHBC
            mDBPDPDDHBC = input.readUInt32();
            bitField0_ |= 0x00000002;
            tag = input.readTag();
            if (tag != 0) {
              break;
            }
          }
          case 0: {
            return this;
          }
          default: {
            if (!input.skipField(tag)) {
              return this;
            }
            tag = input.readTag();
            break;
          }
        }
      }
    }

    @Override
    public void writeTo(final JsonSink output) throws IOException {
      output.beginObject();
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeUInt32(FieldNames.num, num);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeUInt32(FieldNames.mDBPDPDDHBC, mDBPDPDDHBC);
      }
      output.endObject();
    }

    @Override
    public RogueVirtualItemData mergeFrom(final JsonSource input) throws IOException {
      if (!input.beginObject()) {
        return this;
      }
      while (!input.isAtEnd()) {
        switch (input.readFieldHash()) {
          case 109446: {
            if (input.isAtField(FieldNames.num)) {
              if (!input.trySkipNullValue()) {
                num = input.readUInt32();
                bitField0_ |= 0x00000001;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -170385096: {
            if (input.isAtField(FieldNames.mDBPDPDDHBC)) {
              if (!input.trySkipNullValue()) {
                mDBPDPDDHBC = input.readUInt32();
                bitField0_ |= 0x00000002;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          default: {
            input.skipUnknownField();
            break;
          }
        }
      }
      input.endObject();
      return this;
    }

    @Override
    public RogueVirtualItemData clone() {
      return new RogueVirtualItemData().copyFrom(this);
    }

    @Override
    public boolean isEmpty() {
      return ((bitField0_) == 0);
    }

    public static RogueVirtualItemData parseFrom(final byte[] data) throws
        InvalidProtocolBufferException {
      return ProtoMessage.mergeFrom(new RogueVirtualItemData(), data).checkInitialized();
    }

    public static RogueVirtualItemData parseFrom(final ProtoSource input) throws IOException {
      return ProtoMessage.mergeFrom(new RogueVirtualItemData(), input).checkInitialized();
    }

    public static RogueVirtualItemData parseFrom(final JsonSource input) throws IOException {
      return ProtoMessage.mergeFrom(new RogueVirtualItemData(), input).checkInitialized();
    }

    /**
     * @return factory for creating RogueVirtualItemData messages
     */
    public static MessageFactory<RogueVirtualItemData> getFactory() {
      return RogueVirtualItemDataFactory.INSTANCE;
    }

    private enum RogueVirtualItemDataFactory implements MessageFactory<RogueVirtualItemData> {
      INSTANCE;

      @Override
      public RogueVirtualItemData create() {
        return RogueVirtualItemData.newInstance();
      }
    }

    /**
     * Contains name constants used for serializing JSON
     */
    static class FieldNames {
      static final FieldName num = FieldName.forField("num");

      static final FieldName mDBPDPDDHBC = FieldName.forField("MDBPDPDDHBC");
    }
  }
}
