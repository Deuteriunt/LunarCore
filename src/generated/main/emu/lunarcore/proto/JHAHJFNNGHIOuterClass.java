// Code generated by protocol buffer compiler. Do not edit!
package emu.lunarcore.proto;

import java.io.IOException;
import us.hebi.quickbuf.FieldName;
import us.hebi.quickbuf.InvalidProtocolBufferException;
import us.hebi.quickbuf.JsonSink;
import us.hebi.quickbuf.JsonSource;
import us.hebi.quickbuf.MessageFactory;
import us.hebi.quickbuf.ProtoMessage;
import us.hebi.quickbuf.ProtoSink;
import us.hebi.quickbuf.ProtoSource;
import us.hebi.quickbuf.RepeatedInt;

public final class JHAHJFNNGHIOuterClass {
  /**
   * Protobuf type {@code JHAHJFNNGHI}
   */
  public static final class JHAHJFNNGHI extends ProtoMessage<JHAHJFNNGHI> implements Cloneable {
    private static final long serialVersionUID = 0L;

    /**
     * <pre>
     *  3
     * </pre>
     *
     * <code>optional uint32 JPEBPGIEGPO = 14;</code>
     */
    private int jPEBPGIEGPO;

    /**
     * <pre>
     *  9
     * </pre>
     *
     * <code>optional uint32 OIJBOCHMDKA = 15;</code>
     */
    private int oIJBOCHMDKA;

    /**
     * <pre>
     *  true
     * </pre>
     *
     * <code>optional bool CGAFFPHCNEA = 1;</code>
     */
    private boolean cGAFFPHCNEA;

    /**
     * <code>repeated uint32 maze_unlocked = 8;</code>
     */
    private final RepeatedInt mazeUnlocked = RepeatedInt.newEmptyInstance();

    private JHAHJFNNGHI() {
    }

    /**
     * @return a new empty instance of {@code JHAHJFNNGHI}
     */
    public static JHAHJFNNGHI newInstance() {
      return new JHAHJFNNGHI();
    }

    /**
     * <pre>
     *  3
     * </pre>
     *
     * <code>optional uint32 JPEBPGIEGPO = 14;</code>
     * @return whether the jPEBPGIEGPO field is set
     */
    public boolean hasJPEBPGIEGPO() {
      return (bitField0_ & 0x00000001) != 0;
    }

    /**
     * <pre>
     *  3
     * </pre>
     *
     * <code>optional uint32 JPEBPGIEGPO = 14;</code>
     * @return this
     */
    public JHAHJFNNGHI clearJPEBPGIEGPO() {
      bitField0_ &= ~0x00000001;
      jPEBPGIEGPO = 0;
      return this;
    }

    /**
     * <pre>
     *  3
     * </pre>
     *
     * <code>optional uint32 JPEBPGIEGPO = 14;</code>
     * @return the jPEBPGIEGPO
     */
    public int getJPEBPGIEGPO() {
      return jPEBPGIEGPO;
    }

    /**
     * <pre>
     *  3
     * </pre>
     *
     * <code>optional uint32 JPEBPGIEGPO = 14;</code>
     * @param value the jPEBPGIEGPO to set
     * @return this
     */
    public JHAHJFNNGHI setJPEBPGIEGPO(final int value) {
      bitField0_ |= 0x00000001;
      jPEBPGIEGPO = value;
      return this;
    }

    /**
     * <pre>
     *  9
     * </pre>
     *
     * <code>optional uint32 OIJBOCHMDKA = 15;</code>
     * @return whether the oIJBOCHMDKA field is set
     */
    public boolean hasOIJBOCHMDKA() {
      return (bitField0_ & 0x00000002) != 0;
    }

    /**
     * <pre>
     *  9
     * </pre>
     *
     * <code>optional uint32 OIJBOCHMDKA = 15;</code>
     * @return this
     */
    public JHAHJFNNGHI clearOIJBOCHMDKA() {
      bitField0_ &= ~0x00000002;
      oIJBOCHMDKA = 0;
      return this;
    }

    /**
     * <pre>
     *  9
     * </pre>
     *
     * <code>optional uint32 OIJBOCHMDKA = 15;</code>
     * @return the oIJBOCHMDKA
     */
    public int getOIJBOCHMDKA() {
      return oIJBOCHMDKA;
    }

    /**
     * <pre>
     *  9
     * </pre>
     *
     * <code>optional uint32 OIJBOCHMDKA = 15;</code>
     * @param value the oIJBOCHMDKA to set
     * @return this
     */
    public JHAHJFNNGHI setOIJBOCHMDKA(final int value) {
      bitField0_ |= 0x00000002;
      oIJBOCHMDKA = value;
      return this;
    }

    /**
     * <pre>
     *  true
     * </pre>
     *
     * <code>optional bool CGAFFPHCNEA = 1;</code>
     * @return whether the cGAFFPHCNEA field is set
     */
    public boolean hasCGAFFPHCNEA() {
      return (bitField0_ & 0x00000004) != 0;
    }

    /**
     * <pre>
     *  true
     * </pre>
     *
     * <code>optional bool CGAFFPHCNEA = 1;</code>
     * @return this
     */
    public JHAHJFNNGHI clearCGAFFPHCNEA() {
      bitField0_ &= ~0x00000004;
      cGAFFPHCNEA = false;
      return this;
    }

    /**
     * <pre>
     *  true
     * </pre>
     *
     * <code>optional bool CGAFFPHCNEA = 1;</code>
     * @return the cGAFFPHCNEA
     */
    public boolean getCGAFFPHCNEA() {
      return cGAFFPHCNEA;
    }

    /**
     * <pre>
     *  true
     * </pre>
     *
     * <code>optional bool CGAFFPHCNEA = 1;</code>
     * @param value the cGAFFPHCNEA to set
     * @return this
     */
    public JHAHJFNNGHI setCGAFFPHCNEA(final boolean value) {
      bitField0_ |= 0x00000004;
      cGAFFPHCNEA = value;
      return this;
    }

    /**
     * <code>repeated uint32 maze_unlocked = 8;</code>
     * @return whether the mazeUnlocked field is set
     */
    public boolean hasMazeUnlocked() {
      return (bitField0_ & 0x00000008) != 0;
    }

    /**
     * <code>repeated uint32 maze_unlocked = 8;</code>
     * @return this
     */
    public JHAHJFNNGHI clearMazeUnlocked() {
      bitField0_ &= ~0x00000008;
      mazeUnlocked.clear();
      return this;
    }

    /**
     * <code>repeated uint32 maze_unlocked = 8;</code>
     *
     * This method returns the internal storage object without modifying any has state.
     * The returned object should not be modified and be treated as read-only.
     *
     * Use {@link #getMutableMazeUnlocked()} if you want to modify it.
     *
     * @return internal storage object for reading
     */
    public RepeatedInt getMazeUnlocked() {
      return mazeUnlocked;
    }

    /**
     * <code>repeated uint32 maze_unlocked = 8;</code>
     *
     * This method returns the internal storage object and sets the corresponding
     * has state. The returned object will become part of this message and its
     * contents may be modified as long as the has state is not cleared.
     *
     * @return internal storage object for modifications
     */
    public RepeatedInt getMutableMazeUnlocked() {
      bitField0_ |= 0x00000008;
      return mazeUnlocked;
    }

    /**
     * <code>repeated uint32 maze_unlocked = 8;</code>
     * @param value the mazeUnlocked to add
     * @return this
     */
    public JHAHJFNNGHI addMazeUnlocked(final int value) {
      bitField0_ |= 0x00000008;
      mazeUnlocked.add(value);
      return this;
    }

    /**
     * <code>repeated uint32 maze_unlocked = 8;</code>
     * @param values the mazeUnlocked to add
     * @return this
     */
    public JHAHJFNNGHI addAllMazeUnlocked(final int... values) {
      bitField0_ |= 0x00000008;
      mazeUnlocked.addAll(values);
      return this;
    }

    @Override
    public JHAHJFNNGHI copyFrom(final JHAHJFNNGHI other) {
      cachedSize = other.cachedSize;
      if ((bitField0_ | other.bitField0_) != 0) {
        bitField0_ = other.bitField0_;
        jPEBPGIEGPO = other.jPEBPGIEGPO;
        oIJBOCHMDKA = other.oIJBOCHMDKA;
        cGAFFPHCNEA = other.cGAFFPHCNEA;
        mazeUnlocked.copyFrom(other.mazeUnlocked);
      }
      return this;
    }

    @Override
    public JHAHJFNNGHI mergeFrom(final JHAHJFNNGHI other) {
      if (other.isEmpty()) {
        return this;
      }
      cachedSize = -1;
      if (other.hasJPEBPGIEGPO()) {
        setJPEBPGIEGPO(other.jPEBPGIEGPO);
      }
      if (other.hasOIJBOCHMDKA()) {
        setOIJBOCHMDKA(other.oIJBOCHMDKA);
      }
      if (other.hasCGAFFPHCNEA()) {
        setCGAFFPHCNEA(other.cGAFFPHCNEA);
      }
      if (other.hasMazeUnlocked()) {
        getMutableMazeUnlocked().addAll(other.mazeUnlocked);
      }
      return this;
    }

    @Override
    public JHAHJFNNGHI clear() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      jPEBPGIEGPO = 0;
      oIJBOCHMDKA = 0;
      cGAFFPHCNEA = false;
      mazeUnlocked.clear();
      return this;
    }

    @Override
    public JHAHJFNNGHI clearQuick() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      mazeUnlocked.clear();
      return this;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (!(o instanceof JHAHJFNNGHI)) {
        return false;
      }
      JHAHJFNNGHI other = (JHAHJFNNGHI) o;
      return bitField0_ == other.bitField0_
        && (!hasJPEBPGIEGPO() || jPEBPGIEGPO == other.jPEBPGIEGPO)
        && (!hasOIJBOCHMDKA() || oIJBOCHMDKA == other.oIJBOCHMDKA)
        && (!hasCGAFFPHCNEA() || cGAFFPHCNEA == other.cGAFFPHCNEA)
        && (!hasMazeUnlocked() || mazeUnlocked.equals(other.mazeUnlocked));
    }

    @Override
    public void writeTo(final ProtoSink output) throws IOException {
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeRawByte((byte) 112);
        output.writeUInt32NoTag(jPEBPGIEGPO);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeRawByte((byte) 120);
        output.writeUInt32NoTag(oIJBOCHMDKA);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeRawByte((byte) 8);
        output.writeBoolNoTag(cGAFFPHCNEA);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        for (int i = 0; i < mazeUnlocked.length(); i++) {
          output.writeRawByte((byte) 64);
          output.writeUInt32NoTag(mazeUnlocked.array()[i]);
        }
      }
    }

    @Override
    protected int computeSerializedSize() {
      int size = 0;
      if ((bitField0_ & 0x00000001) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(jPEBPGIEGPO);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(oIJBOCHMDKA);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        size += 2;
      }
      if ((bitField0_ & 0x00000008) != 0) {
        size += (1 * mazeUnlocked.length()) + ProtoSink.computeRepeatedUInt32SizeNoTag(mazeUnlocked);
      }
      return size;
    }

    @Override
    @SuppressWarnings("fallthrough")
    public JHAHJFNNGHI mergeFrom(final ProtoSource input) throws IOException {
      // Enabled Fall-Through Optimization (QuickBuffers)
      int tag = input.readTag();
      while (true) {
        switch (tag) {
          case 112: {
            // jPEBPGIEGPO
            jPEBPGIEGPO = input.readUInt32();
            bitField0_ |= 0x00000001;
            tag = input.readTag();
            if (tag != 120) {
              break;
            }
          }
          case 120: {
            // oIJBOCHMDKA
            oIJBOCHMDKA = input.readUInt32();
            bitField0_ |= 0x00000002;
            tag = input.readTag();
            if (tag != 8) {
              break;
            }
          }
          case 8: {
            // cGAFFPHCNEA
            cGAFFPHCNEA = input.readBool();
            bitField0_ |= 0x00000004;
            tag = input.readTag();
            if (tag != 66) {
              break;
            }
          }
          case 66: {
            // mazeUnlocked [packed=true]
            input.readPackedUInt32(mazeUnlocked, tag);
            bitField0_ |= 0x00000008;
            tag = input.readTag();
            if (tag != 0) {
              break;
            }
          }
          case 0: {
            return this;
          }
          default: {
            if (!input.skipField(tag)) {
              return this;
            }
            tag = input.readTag();
            break;
          }
          case 64: {
            // mazeUnlocked [packed=false]
            tag = input.readRepeatedUInt32(mazeUnlocked, tag);
            bitField0_ |= 0x00000008;
            break;
          }
        }
      }
    }

    @Override
    public void writeTo(final JsonSink output) throws IOException {
      output.beginObject();
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeUInt32(FieldNames.jPEBPGIEGPO, jPEBPGIEGPO);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeUInt32(FieldNames.oIJBOCHMDKA, oIJBOCHMDKA);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeBool(FieldNames.cGAFFPHCNEA, cGAFFPHCNEA);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeRepeatedUInt32(FieldNames.mazeUnlocked, mazeUnlocked);
      }
      output.endObject();
    }

    @Override
    public JHAHJFNNGHI mergeFrom(final JsonSource input) throws IOException {
      if (!input.beginObject()) {
        return this;
      }
      while (!input.isAtEnd()) {
        switch (input.readFieldHash()) {
          case 617496720: {
            if (input.isAtField(FieldNames.jPEBPGIEGPO)) {
              if (!input.trySkipNullValue()) {
                jPEBPGIEGPO = input.readUInt32();
                bitField0_ |= 0x00000001;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 148222799: {
            if (input.isAtField(FieldNames.oIJBOCHMDKA)) {
              if (!input.trySkipNullValue()) {
                oIJBOCHMDKA = input.readUInt32();
                bitField0_ |= 0x00000002;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -927350692: {
            if (input.isAtField(FieldNames.cGAFFPHCNEA)) {
              if (!input.trySkipNullValue()) {
                cGAFFPHCNEA = input.readBool();
                bitField0_ |= 0x00000004;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1835898942:
          case -958227613: {
            if (input.isAtField(FieldNames.mazeUnlocked)) {
              if (!input.trySkipNullValue()) {
                input.readRepeatedUInt32(mazeUnlocked);
                bitField0_ |= 0x00000008;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          default: {
            input.skipUnknownField();
            break;
          }
        }
      }
      input.endObject();
      return this;
    }

    @Override
    public JHAHJFNNGHI clone() {
      return new JHAHJFNNGHI().copyFrom(this);
    }

    @Override
    public boolean isEmpty() {
      return ((bitField0_) == 0);
    }

    public static JHAHJFNNGHI parseFrom(final byte[] data) throws InvalidProtocolBufferException {
      return ProtoMessage.mergeFrom(new JHAHJFNNGHI(), data).checkInitialized();
    }

    public static JHAHJFNNGHI parseFrom(final ProtoSource input) throws IOException {
      return ProtoMessage.mergeFrom(new JHAHJFNNGHI(), input).checkInitialized();
    }

    public static JHAHJFNNGHI parseFrom(final JsonSource input) throws IOException {
      return ProtoMessage.mergeFrom(new JHAHJFNNGHI(), input).checkInitialized();
    }

    /**
     * @return factory for creating JHAHJFNNGHI messages
     */
    public static MessageFactory<JHAHJFNNGHI> getFactory() {
      return JHAHJFNNGHIFactory.INSTANCE;
    }

    private enum JHAHJFNNGHIFactory implements MessageFactory<JHAHJFNNGHI> {
      INSTANCE;

      @Override
      public JHAHJFNNGHI create() {
        return JHAHJFNNGHI.newInstance();
      }
    }

    /**
     * Contains name constants used for serializing JSON
     */
    static class FieldNames {
      static final FieldName jPEBPGIEGPO = FieldName.forField("JPEBPGIEGPO");

      static final FieldName oIJBOCHMDKA = FieldName.forField("OIJBOCHMDKA");

      static final FieldName cGAFFPHCNEA = FieldName.forField("CGAFFPHCNEA");

      static final FieldName mazeUnlocked = FieldName.forField("mazeUnlocked", "maze_unlocked");
    }
  }
}
