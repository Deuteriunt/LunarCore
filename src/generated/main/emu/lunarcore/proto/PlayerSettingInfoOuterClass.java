// Code generated by protocol buffer compiler. Do not edit!
package emu.lunarcore.proto;

import java.io.IOException;
import us.hebi.quickbuf.FieldName;
import us.hebi.quickbuf.InvalidProtocolBufferException;
import us.hebi.quickbuf.JsonSink;
import us.hebi.quickbuf.JsonSource;
import us.hebi.quickbuf.MessageFactory;
import us.hebi.quickbuf.ProtoMessage;
import us.hebi.quickbuf.ProtoSink;
import us.hebi.quickbuf.ProtoSource;

public final class PlayerSettingInfoOuterClass {
  /**
   * Protobuf type {@code PlayerSettingInfo}
   */
  public static final class PlayerSettingInfo extends ProtoMessage<PlayerSettingInfo> implements Cloneable {
    private static final long serialVersionUID = 0L;

    /**
     * <code>optional bool PMBBEIEHBML = 7;</code>
     */
    private boolean pMBBEIEHBML;

    /**
     * <code>optional bool NODHLKCFLPA = 8;</code>
     */
    private boolean nODHLKCFLPA;

    /**
     * <code>optional bool HMAMGFJANGO = 14;</code>
     */
    private boolean hMAMGFJANGO;

    private PlayerSettingInfo() {
    }

    /**
     * @return a new empty instance of {@code PlayerSettingInfo}
     */
    public static PlayerSettingInfo newInstance() {
      return new PlayerSettingInfo();
    }

    /**
     * <code>optional bool PMBBEIEHBML = 7;</code>
     * @return whether the pMBBEIEHBML field is set
     */
    public boolean hasPMBBEIEHBML() {
      return (bitField0_ & 0x00000001) != 0;
    }

    /**
     * <code>optional bool PMBBEIEHBML = 7;</code>
     * @return this
     */
    public PlayerSettingInfo clearPMBBEIEHBML() {
      bitField0_ &= ~0x00000001;
      pMBBEIEHBML = false;
      return this;
    }

    /**
     * <code>optional bool PMBBEIEHBML = 7;</code>
     * @return the pMBBEIEHBML
     */
    public boolean getPMBBEIEHBML() {
      return pMBBEIEHBML;
    }

    /**
     * <code>optional bool PMBBEIEHBML = 7;</code>
     * @param value the pMBBEIEHBML to set
     * @return this
     */
    public PlayerSettingInfo setPMBBEIEHBML(final boolean value) {
      bitField0_ |= 0x00000001;
      pMBBEIEHBML = value;
      return this;
    }

    /**
     * <code>optional bool NODHLKCFLPA = 8;</code>
     * @return whether the nODHLKCFLPA field is set
     */
    public boolean hasNODHLKCFLPA() {
      return (bitField0_ & 0x00000002) != 0;
    }

    /**
     * <code>optional bool NODHLKCFLPA = 8;</code>
     * @return this
     */
    public PlayerSettingInfo clearNODHLKCFLPA() {
      bitField0_ &= ~0x00000002;
      nODHLKCFLPA = false;
      return this;
    }

    /**
     * <code>optional bool NODHLKCFLPA = 8;</code>
     * @return the nODHLKCFLPA
     */
    public boolean getNODHLKCFLPA() {
      return nODHLKCFLPA;
    }

    /**
     * <code>optional bool NODHLKCFLPA = 8;</code>
     * @param value the nODHLKCFLPA to set
     * @return this
     */
    public PlayerSettingInfo setNODHLKCFLPA(final boolean value) {
      bitField0_ |= 0x00000002;
      nODHLKCFLPA = value;
      return this;
    }

    /**
     * <code>optional bool HMAMGFJANGO = 14;</code>
     * @return whether the hMAMGFJANGO field is set
     */
    public boolean hasHMAMGFJANGO() {
      return (bitField0_ & 0x00000004) != 0;
    }

    /**
     * <code>optional bool HMAMGFJANGO = 14;</code>
     * @return this
     */
    public PlayerSettingInfo clearHMAMGFJANGO() {
      bitField0_ &= ~0x00000004;
      hMAMGFJANGO = false;
      return this;
    }

    /**
     * <code>optional bool HMAMGFJANGO = 14;</code>
     * @return the hMAMGFJANGO
     */
    public boolean getHMAMGFJANGO() {
      return hMAMGFJANGO;
    }

    /**
     * <code>optional bool HMAMGFJANGO = 14;</code>
     * @param value the hMAMGFJANGO to set
     * @return this
     */
    public PlayerSettingInfo setHMAMGFJANGO(final boolean value) {
      bitField0_ |= 0x00000004;
      hMAMGFJANGO = value;
      return this;
    }

    @Override
    public PlayerSettingInfo copyFrom(final PlayerSettingInfo other) {
      cachedSize = other.cachedSize;
      if ((bitField0_ | other.bitField0_) != 0) {
        bitField0_ = other.bitField0_;
        pMBBEIEHBML = other.pMBBEIEHBML;
        nODHLKCFLPA = other.nODHLKCFLPA;
        hMAMGFJANGO = other.hMAMGFJANGO;
      }
      return this;
    }

    @Override
    public PlayerSettingInfo mergeFrom(final PlayerSettingInfo other) {
      if (other.isEmpty()) {
        return this;
      }
      cachedSize = -1;
      if (other.hasPMBBEIEHBML()) {
        setPMBBEIEHBML(other.pMBBEIEHBML);
      }
      if (other.hasNODHLKCFLPA()) {
        setNODHLKCFLPA(other.nODHLKCFLPA);
      }
      if (other.hasHMAMGFJANGO()) {
        setHMAMGFJANGO(other.hMAMGFJANGO);
      }
      return this;
    }

    @Override
    public PlayerSettingInfo clear() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      pMBBEIEHBML = false;
      nODHLKCFLPA = false;
      hMAMGFJANGO = false;
      return this;
    }

    @Override
    public PlayerSettingInfo clearQuick() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      return this;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (!(o instanceof PlayerSettingInfo)) {
        return false;
      }
      PlayerSettingInfo other = (PlayerSettingInfo) o;
      return bitField0_ == other.bitField0_
        && (!hasPMBBEIEHBML() || pMBBEIEHBML == other.pMBBEIEHBML)
        && (!hasNODHLKCFLPA() || nODHLKCFLPA == other.nODHLKCFLPA)
        && (!hasHMAMGFJANGO() || hMAMGFJANGO == other.hMAMGFJANGO);
    }

    @Override
    public void writeTo(final ProtoSink output) throws IOException {
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeRawByte((byte) 56);
        output.writeBoolNoTag(pMBBEIEHBML);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeRawByte((byte) 64);
        output.writeBoolNoTag(nODHLKCFLPA);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeRawByte((byte) 112);
        output.writeBoolNoTag(hMAMGFJANGO);
      }
    }

    @Override
    protected int computeSerializedSize() {
      int size = 0;
      if ((bitField0_ & 0x00000001) != 0) {
        size += 2;
      }
      if ((bitField0_ & 0x00000002) != 0) {
        size += 2;
      }
      if ((bitField0_ & 0x00000004) != 0) {
        size += 2;
      }
      return size;
    }

    @Override
    @SuppressWarnings("fallthrough")
    public PlayerSettingInfo mergeFrom(final ProtoSource input) throws IOException {
      // Enabled Fall-Through Optimization (QuickBuffers)
      int tag = input.readTag();
      while (true) {
        switch (tag) {
          case 56: {
            // pMBBEIEHBML
            pMBBEIEHBML = input.readBool();
            bitField0_ |= 0x00000001;
            tag = input.readTag();
            if (tag != 64) {
              break;
            }
          }
          case 64: {
            // nODHLKCFLPA
            nODHLKCFLPA = input.readBool();
            bitField0_ |= 0x00000002;
            tag = input.readTag();
            if (tag != 112) {
              break;
            }
          }
          case 112: {
            // hMAMGFJANGO
            hMAMGFJANGO = input.readBool();
            bitField0_ |= 0x00000004;
            tag = input.readTag();
            if (tag != 0) {
              break;
            }
          }
          case 0: {
            return this;
          }
          default: {
            if (!input.skipField(tag)) {
              return this;
            }
            tag = input.readTag();
            break;
          }
        }
      }
    }

    @Override
    public void writeTo(final JsonSink output) throws IOException {
      output.beginObject();
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeBool(FieldNames.pMBBEIEHBML, pMBBEIEHBML);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeBool(FieldNames.nODHLKCFLPA, nODHLKCFLPA);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeBool(FieldNames.hMAMGFJANGO, hMAMGFJANGO);
      }
      output.endObject();
    }

    @Override
    public PlayerSettingInfo mergeFrom(final JsonSource input) throws IOException {
      if (!input.beginObject()) {
        return this;
      }
      while (!input.isAtEnd()) {
        switch (input.readFieldHash()) {
          case -976297443: {
            if (input.isAtField(FieldNames.pMBBEIEHBML)) {
              if (!input.trySkipNullValue()) {
                pMBBEIEHBML = input.readBool();
                bitField0_ |= 0x00000001;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1845450698: {
            if (input.isAtField(FieldNames.nODHLKCFLPA)) {
              if (!input.trySkipNullValue()) {
                nODHLKCFLPA = input.readBool();
                bitField0_ |= 0x00000002;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 1711483535: {
            if (input.isAtField(FieldNames.hMAMGFJANGO)) {
              if (!input.trySkipNullValue()) {
                hMAMGFJANGO = input.readBool();
                bitField0_ |= 0x00000004;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          default: {
            input.skipUnknownField();
            break;
          }
        }
      }
      input.endObject();
      return this;
    }

    @Override
    public PlayerSettingInfo clone() {
      return new PlayerSettingInfo().copyFrom(this);
    }

    @Override
    public boolean isEmpty() {
      return ((bitField0_) == 0);
    }

    public static PlayerSettingInfo parseFrom(final byte[] data) throws
        InvalidProtocolBufferException {
      return ProtoMessage.mergeFrom(new PlayerSettingInfo(), data).checkInitialized();
    }

    public static PlayerSettingInfo parseFrom(final ProtoSource input) throws IOException {
      return ProtoMessage.mergeFrom(new PlayerSettingInfo(), input).checkInitialized();
    }

    public static PlayerSettingInfo parseFrom(final JsonSource input) throws IOException {
      return ProtoMessage.mergeFrom(new PlayerSettingInfo(), input).checkInitialized();
    }

    /**
     * @return factory for creating PlayerSettingInfo messages
     */
    public static MessageFactory<PlayerSettingInfo> getFactory() {
      return PlayerSettingInfoFactory.INSTANCE;
    }

    private enum PlayerSettingInfoFactory implements MessageFactory<PlayerSettingInfo> {
      INSTANCE;

      @Override
      public PlayerSettingInfo create() {
        return PlayerSettingInfo.newInstance();
      }
    }

    /**
     * Contains name constants used for serializing JSON
     */
    static class FieldNames {
      static final FieldName pMBBEIEHBML = FieldName.forField("PMBBEIEHBML");

      static final FieldName nODHLKCFLPA = FieldName.forField("NODHLKCFLPA");

      static final FieldName hMAMGFJANGO = FieldName.forField("HMAMGFJANGO");
    }
  }
}
